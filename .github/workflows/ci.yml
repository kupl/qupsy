name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: read
  statuses: write
  pull-requests: write

jobs:
  test:
    name: Test Codebase

    strategy:
      matrix:
        python-version:
          - '3.12'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test]

      - name: Run tests
        run: |
          pytest . --junitxml=.pytest/test-results.xml --cov=qupsy --cov-report=xml:.pytest/coverage.xml

      - name: Post test results
        if: ${{ github.event_name == 'pull_request' }}
        uses: sambyeol/publish-pytest-action@v3
        with:
          title: Test Results (Python ${{ matrix.python-version }})
          junit-xml: .pytest/test-results.xml
          coverage-xml: .pytest/coverage.xml
  
  lint:
    name: Lint Codebase

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Lint Codebase
        uses: super-linter/super-linter/slim@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          LINTER_RULES_PATH: .
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_PYTHON_ISORT: true
          PYTHON_ISORT_CONFIG_FILE: pyproject.toml
          VALIDATE_YAML: true

  type-check:
    name: Type Check Codebase

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test,type]
      
      - name: Run type check
        run: |
          pyright .
